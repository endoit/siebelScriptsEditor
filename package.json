{
	"name": "siebelscriptandwebtempeditor",
	"displayName": "Siebel Script And Web Template Editor",
	"description": "Enables the editing of Siebel object server scripts and web templates in VSCode and updating them in Siebel using the Siebel REST API",
	"version": "2.2.0",
	"publisher": "endoIT",
	"icon": "icon.png",
	"engines": {
		"vscode": "^1.73.0"
	},
	"categories": [
		"Other",
		"Snippets"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/endoit/siebelScriptsEditor"
	},
	"activationEvents": [
		"onView:extensionView"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "siebelScriptAndWebTempEditor",
					"title": "Siebel Script And Web Template Editor",
					"icon": "./icon.png"
				}
			]
		},
		"views": {
			"siebelScriptAndWebTempEditor": [
				{
					"type": "webview",
					"id": "extensionView",
					"name": "Datasource"
				},
				{
					"id": "service",
					"name": "Business Services"
				},
				{
					"id": "buscomp",
					"name": "Business Components"
				},
				{
					"id": "applet",
					"name": "Applets"
				},
				{
					"id": "application",
					"name": "Applications"
				},
				{
					"id": "webtemp",
					"name": "Web Templates"
				}
			]
		},
		"commands": [
			{
				"command": "siebelscriptandwebtempeditor.pull",
				"title": "Pull script/web template from Siebel",
				"icon": "$(fold-down)",
				"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.pullEnabled && !isInDiffEditor"
			},
			{
				"command": "siebelscriptandwebtempeditor.push",
				"title": "Push script/web template to Siebel",
				"icon": "$(fold-up)",
				"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.pushEnabled && !isInDiffEditor"
			},
			{
				"command": "siebelscriptandwebtempeditor.compare",
				"title": "Compare script/web template with Siebel",
				"icon": "$(symbol-boolean)",
				"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.pullEnabled && !isInDiffEditor"
			},
			{
				"command": "siebelscriptandwebtempeditor.search",
				"title": "Pull missing and search in scripts",
				"icon": "$(search-fuzzy)",
				"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.searchEnabled && !isInDiffEditor"
			},
			{
				"command": "siebelscriptandwebtempeditor.pushAll",
				"title": "Push all scripts of the current parent object to Siebel",
				"icon": "$(arrow-circle-up)",
				"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.pushAllEnabled && !isInDiffEditor"
			},
			{
				"command": "siebelscriptandwebtempeditor.refreshConnections",
				"title": "Refresh Workspaces",
				"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.refreshEnabled",
				"icon": "$(refresh)"
			},
			{
				"command": "siebelscriptandwebtempeditor.newConnection",
				"title": "New Connection",
				"when": "workspaceFolderCount > 0",
				"icon": "$(add)"
			},
			{
				"command": "siebelscriptandwebtempeditor.editConnection",
				"title": "Edit Connection",
				"when": "workspaceFolderCount > 0",
				"icon": "$(edit)"
			},
			{
				"command": "siebelscriptandwebtempeditor.openSettings",
				"title": "Open Settings",
				"when": "workspaceFolderCount > 0",
				"icon": "$(settings-gear)"
			}
		],
		"menus": {
			"editor/title": [
				{
					"command": "siebelscriptandwebtempeditor.pull",
					"group": "navigation",
					"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.pullEnabled && !isInDiffEditor"
				},
				{
					"command": "siebelscriptandwebtempeditor.push",
					"group": "navigation@1",
					"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.pushEnabled && !isInDiffEditor"
				},
				{
					"command": "siebelscriptandwebtempeditor.compare",
					"group": "navigation@2",
					"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.pullEnabled && !isInDiffEditor"
				},
				{
					"command": "siebelscriptandwebtempeditor.search",
					"group": "navigation@3",
					"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.searchEnabled && !isInDiffEditor"
				},
				{
					"command": "siebelscriptandwebtempeditor.pushAll",
					"group": "navigation@4",
					"when": "workspaceFolderCount > 0 && siebelscriptandwebtempeditor.pushAllEnabled && !isInDiffEditor"
				}
			],
			"view/title": [
				{
					"command": "siebelscriptandwebtempeditor.refreshConnections",
					"when": "workspaceFolderCount > 0 && view == extensionView && siebelscriptandwebtempeditor.refreshEnabled",
					"group": "navigation"
				},
				{
					"command": "siebelscriptandwebtempeditor.newConnection",
					"when": "workspaceFolderCount > 0 && view == extensionView",
					"group": "navigation@1"
				},
				{
					"command": "siebelscriptandwebtempeditor.editConnection",
					"when": "workspaceFolderCount > 0 && view == extensionView",
					"group": "navigation@2"
				},
				{
					"command": "siebelscriptandwebtempeditor.openSettings",
					"when": "workspaceFolderCount > 0 && view == extensionView",
					"group": "navigation@3"
				}
			]
		},
		"configuration": {
			"title": "Siebel Script And Web Template Editor",
			"properties": {
				"siebelScriptAndWebTempEditor.connections": {
					"type": "array",
					"markdownDescription": "Do not modify manually, change through the New/Edit Connection panel!",
					"additionalProperties": {
						"type": "object"
					},
					"default": []
				},
				"siebelScriptAndWebTempEditor.defaultConnectionName": {
					"type": "string",
					"markdownDescription": "Do not modify here, use the Default Connection checkbox in the Edit Connection panel!"
				},
				"siebelScriptAndWebTempEditor.defaultScriptFetching": {
					"type": "string",
					"enum": [
						"None - always ask",
						"Only method names",
						"All scripts"
					],
					"default": "None - always ask",
					"markdownDescription": "Default method for fetching server scripts in the tree views when clicking on a Siebel object:  \n - None - always ask: always asks how to fetch.  \n - Only method names: fetches only the method names of the Siebel object.  \n - All scripts: always downloads all scripts of the Siebel object."
				},
				"siebelScriptAndWebTempEditor.singleFileAutoDownload": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "If you set this to true, scripts and web templates will be downloaded when clicking on one, without asking for permission."
				},
				"siebelScriptAndWebTempEditor.localFileExtension": {
					"type": "string",
					"enum": [
						".js",
						".ts"
					],
					"default": ".js",
					"markdownDescription": "The default file extension for the downloaded server scripts. If you use type definitons in eScript, it is recommended to save the files as .ts."
				},
				"siebelScriptAndWebTempEditor.maxPageSize": {
					"type": "integer",
					"enum": [
						10,
						20,
						50,
						100,
						200,
						500
					],
					"default": 100,
					"markdownDescription": "Number of records to fetch from the Siebel REST API. Can not be greater than the value of the MaximumPageSize parameter of the component EAI Object Manager (default is 100)!"
				},
				"siebelScriptAndWebTempEditor.defaultActionWhenFileExists": {
					"type": "string",
					"enum": [
						"None - always ask",
						"Open file",
						"Overwrite"
					],
					"default": "None - always ask",
					"markdownDescription": "The default action when selecting an already downloaded script or web template from the tree views:   \n - None - always ask: always asks what to do.  \n - Open file: opens the file from the disk, which can be refeshed manually with the pull button.   \n - Overwrite: pull the content from Siebel before opening it. __WARNING__: this overwrites files which are already downloaded!"
				}
			}
		},
		"snippets": [
			{
				"language": "javascript",
				"path": "./snippets.json"
			}
		]
	},
	"scripts": {
		"test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/index.js",
		"pretest": "npm run compile-web",
		"vscode:prepublish": "npm run package-web",
		"compile-web": "webpack",
		"watch-web": "webpack --watch",
		"package-web": "webpack --mode production --devtool hidden-source-map",
		"lint": "eslint src --ext ts",
		"run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."
	},
	"dependencies": {
		"axios": "^1.8.4"
	},
	"devDependencies": {
		"@types/glob": "^7.1.4",
		"@types/mocha": "^10.0.1",
		"@types/node": "^14.18.63",
		"@types/vscode": "^1.73.0",
		"@types/webpack-env": "^1.18.0",
		"@typescript-eslint/eslint-plugin": "^5.45.0",
		"@typescript-eslint/parser": "^5.45.0",
		"@vscode/test-electron": "^2.5.2",
		"@vscode/test-web": "^0.0.68",
		"assert": "^2.0.0",
		"eslint": "^8.28.0",
		"glob": "^7.1.7",
		"mocha": "^10.1.0",
		"process": "^0.11.10",
		"ts-loader": "^9.4.1",
		"typescript": "^5.4.5",
		"webpack": "^5.75.0",
		"webpack-cli": "^5.1.4"
	}
}